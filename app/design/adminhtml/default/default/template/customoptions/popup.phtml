<script type="text/javascript">
    //<![CDATA[

    var optionTextCounter = {
        count : function(field,cntfield,maxlimit){
            if (field.value.length > maxlimit){
                field.value = field.value.substring(0, maxlimit);
            } else {
                cntfield.innerHTML = maxlimit - field.value.length;
            }
        }
    }

    function validateOptionsCallback(elmId, result) {
        var container = $(elmId).up('ul.options-list');
        if (result == 'failed') {
            container.removeClassName('validation-passed');
            container.addClassName('validation-failed');
        } else {
            container.removeClassName('validation-failed');
            container.addClassName('validation-passed');
        }
    }

    var DateOption = Class.create({

        getDaysInMonth: function(month, year)
        {
            var curDate = new Date();
            if (!month) {
                month = curDate.getMonth();
            }
            if (2 == month && !year) { // leap year assumption for unknown year
                return 29;
            }
            if (!year) {
                year = curDate.getFullYear();
            }
            return 32 - new Date(year, month - 1, 32).getDate();
        },

        reloadMonth: function(event)
        {
            var selectEl = event.findElement();
            var idParts = selectEl.id.split("_");
            if (idParts.length != 3) {
                return false;
            }
            var optionIdPrefix = idParts[0] + "_" + idParts[1];
            var month = parseInt($(optionIdPrefix + "_month").value);
            var year = parseInt($(optionIdPrefix + "_year").value);
            var dayEl = $(optionIdPrefix + "_day");

            var days = this.getDaysInMonth(month, year);

            //remove days
            for (var i = dayEl.options.length - 1; i >= 0; i--) {
                if (dayEl.options[i].value > days) {
                    dayEl.remove(dayEl.options[i].index);
                }
            }

            // add days
            var lastDay = parseInt(dayEl.options[dayEl.options.length-1].value);
            for (i = lastDay + 1; i <= days; i++) {
                this.addOption(dayEl, i, i);
            }
        },

        addOption: function(select, text, value)
        {
            var option = document.createElement('OPTION');
            option.value = value;
            option.text = text;

            if (select.options.add) {
                select.options.add(option);
            } else {
                select.appendChild(option);
            }
        }
    });
    dateOption = new DateOption();

    var edit_custom_options_content;

    function editCustomOptions(orderItemId) {
        Dialog.confirm(edit_custom_options_content, {
            draggable:true,
            resizable:true,
            closable:true,
            className:"magento",
            windowClassName:"popup-window",
            title:'Configure Product Custom Options',
            width:500,
            height:650,
            zIndex:1000,
            recenterAuto:false,
            hideEffect:Element.hide,
            showEffect:Element.show,
            id:"session_customoptions_edit",
            buttonClass:"form-button",
            okLabel:"Ok",
            ok: function(){
                var customOptionsForm = new VarienForm('admin_custom_options_edit');
                if (customOptionsForm.validator && customOptionsForm.validator.validate()) {
                    $$("[name=order_item_id]")[0].value  = orderItemId;
                    var parameters = Form.serialize('admin_custom_options_edit');
                    var win = Windows.focusedWindow;
                    win.close();
                    new Ajax.Request("<?php echo $this->getUrl("adminhtml/options/edit") ?>", {
                        parameters: parameters,
                        onSuccess: function(response) {
                            $$('.order-tables tbody')[0].update(response.responseText);
                        }
                    });
                }
            }
        });
        edit_custom_options_content.evalScripts();
    }
    //]]>
</script>